<?php

use App\Models\Notification;
use Illuminate\Foundation\Testing\RefreshDatabase;

uses(RefreshDatabase::class);

test('destroy returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $notification = Notification::factory()->create();

    $response = $this->delete(route('notifications.destroy', ['id' => $notification->id]));

    $response->assertOk();
    $this->assertModelMissing($notification);

    // TODO: perform additional assertions
});

test('destroy all returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->delete(route('notifications.destroyall'));

    $response->assertOk();

    // TODO: perform additional assertions
});

test('index returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get(route('notifications.index'));

    $response->assertOk();
    $response->assertViewIs('user.notification.index');

    // TODO: perform additional assertions
});

test('show returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $notification = Notification::factory()->create();

    $response = $this->get(route('notifications.show', ['id' => $notification->id]));

    $response->assertRedirect(withSuccess(trans('notification.marked-read')));

    // TODO: perform additional assertions
});

test('update returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $notification = Notification::factory()->create();

    $response = $this->post(route('notifications.update', ['id' => $notification->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update all returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->post(route('notifications.updateall'), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

// test cases...
