<?php

use App\Models\User;
use App\Models\Warning;
use Illuminate\Foundation\Testing\RefreshDatabase;

uses(RefreshDatabase::class);

test('deactivate returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();

    $response = $this->post(route('deactivateWarning', ['id' => $warning->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('deactivate all warnings returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $warning = Warning::factory()->create();
    $warnings = Warning::factory()->times(3)->create();

    $response = $this->post(route('massDeactivateWarnings', ['username' => $warning->username]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete all warnings returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $warning = Warning::factory()->create();
    $warnings = Warning::factory()->times(3)->create();

    $response = $this->delete(route('massDeleteWarnings', ['username' => $warning->username]));

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete warning returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();

    $response = $this->delete(route('deleteWarning', ['id' => $warning->id]));

    $response->assertOk();

    // TODO: perform additional assertions
});

test('restore warning returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();

    $response = $this->post(route('restoreWarning', ['id' => $warning->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('show returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $warning = Warning::factory()->create();
    $warnings = Warning::factory()->times(3)->create();

    $response = $this->get(route('warnings.show', ['username' => $warning->username]));

    $response->assertOk();
    $response->assertViewIs('user.warning.index');
    $response->assertViewHas('warnings', $warnings);
    $response->assertViewHas('warningcount');
    $response->assertViewHas('softDeletedWarnings');
    $response->assertViewHas('softDeletedWarningCount');
    $response->assertViewHas('user', $user);

    // TODO: perform additional assertions
});

// test cases...
