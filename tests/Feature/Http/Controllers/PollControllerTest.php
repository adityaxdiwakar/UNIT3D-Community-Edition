<?php

uses(RefreshDatabase::class);

test('index returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $polls = \App\Models\Poll::factory()->times(3)->create();

    $response = $this->get(route('polls'));

    $response->assertOk();
    $response->assertViewIs('poll.latest');
    $response->assertViewHas('polls', $polls);

    // TODO: perform additional assertions
});

test('result returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $poll = \App\Models\Poll::factory()->create();

    $response = $this->get(route('poll_results', ['id' => $poll->id]));

    $response->assertOk();
    $response->assertViewIs('poll.result');

    // TODO: perform additional assertions
});

test('show returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $poll = \App\Models\Poll::factory()->create();

    $response = $this->get(route('poll', ['id' => $poll->id]));

    $response->assertOk();
    $response->assertViewIs('poll.show');
    $response->assertViewHas('poll', $poll);

    // TODO: perform additional assertions
});

test('vote returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $option = \App\Models\Option::factory()->create();

    $response = $this->post('polls/vote', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('vote validates with a form request', function (): void {
    $this->assertActionUsesFormRequest(
        \App\Http\Controllers\PollController::class,
        'vote',
        \App\Http\Requests\VoteOnPoll::class
    );
});

// test cases...
