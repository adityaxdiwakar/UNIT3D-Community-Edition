<?php

use App\Http\Controllers\Staff\ModerationController;
use App\Http\Requests\Staff\UpdateModerationRequest;
use App\Models\Torrent;
use Illuminate\Foundation\Testing\RefreshDatabase;

uses(RefreshDatabase::class);

test('index returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $torrents = Torrent::factory()->times(3)->create();

    $response = $this->get(route('staff.moderation.index'));

    $response->assertOk();
    $response->assertViewIs('Staff.moderation.index');
    $response->assertViewHas('current');
    $response->assertViewHas('pending');
    $response->assertViewHas('postponed');
    $response->assertViewHas('rejected');

    // TODO: perform additional assertions
});

test('update returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $torrent = Torrent::factory()->create();

    $response = $this->post(route('staff.moderation.update', ['id' => $id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update validates with a form request', function (): void {
    $this->assertActionUsesFormRequest(
        ModerationController::class,
        'update',
        UpdateModerationRequest::class
    );
});

// test cases...
