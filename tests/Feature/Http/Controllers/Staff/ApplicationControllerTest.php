<?php

uses(RefreshDatabase::class);

test('approve returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $application = \App\Models\Application::factory()->create();

    $response = $this->post(route('staff.applications.approve', ['id' => $application->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('index returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $applications = \App\Models\Application::factory()->times(3)->create();

    $response = $this->get(route('staff.applications.index'));

    $response->assertOk();
    $response->assertViewIs('Staff.application.index');
    $response->assertViewHas('applications', $applications);

    // TODO: perform additional assertions
});

test('reject returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $application = \App\Models\Application::factory()->create();

    $response = $this->post(route('staff.applications.reject', ['id' => $application->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('show returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $application = \App\Models\Application::factory()->create();

    $response = $this->get(route('staff.applications.show', ['id' => $application->id]));

    $response->assertOk();
    $response->assertViewIs('Staff.application.show');
    $response->assertViewHas('application', $application);

    // TODO: perform additional assertions
});

// test cases...
