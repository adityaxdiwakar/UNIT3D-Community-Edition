<?php

use App\Http\Controllers\Staff\ReportController;
use App\Http\Requests\Staff\UpdateReportRequest;
use App\Models\Report;
use Illuminate\Foundation\Testing\RefreshDatabase;

uses(RefreshDatabase::class);

test('index returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $reports = Report::factory()->times(3)->create();

    $response = $this->get(route('staff.reports.index'));

    $response->assertOk();
    $response->assertViewIs('Staff.report.index');
    $response->assertViewHas('reports', $reports);

    // TODO: perform additional assertions
});

test('show returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $report = Report::factory()->create();

    $response = $this->get(route('staff.reports.show', ['id' => $report->id]));

    $response->assertOk();
    $response->assertViewIs('Staff.report.show');
    $response->assertViewHas('report', $report);
    $response->assertViewHas('urls');

    // TODO: perform additional assertions
});

test('update returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $report = Report::factory()->create();

    $response = $this->post(route('staff.reports.update', ['id' => $report->id]), [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update validates with a form request', function (): void {
    $this->assertActionUsesFormRequest(
        ReportController::class,
        'update',
        UpdateReportRequest::class
    );
});

// test cases...
