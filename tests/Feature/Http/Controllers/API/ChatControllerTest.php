<?php

uses(RefreshDatabase::class);

test('audibles returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();

    $response = $this->get('api/chat/audibles');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('bot messages returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $bot = \App\Models\Bot::factory()->create();

    $response = $this->get('api/chat/bot/{bot_id}');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('bots returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/bots');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('config returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/config');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('create message returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();
    $bots = \App\Models\Bot::factory()->times(3)->create();
    $userEchos = \App\Models\UserEcho::factory()->times(3)->create();
    $userAudibles = \App\Models\UserAudible::factory()->times(3)->create();

    $response = $this->post('api/chat/messages', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete bot echo returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userEcho = \App\Models\UserEcho::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userEchos = \App\Models\UserEcho::factory()->times(3)->create();

    $response = $this->post('api/chat/echoes/{user_id}/delete/bot', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete message returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->post('api/chat/message/{id}/delete', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete room echo returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userEcho = \App\Models\UserEcho::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userEchos = \App\Models\UserEcho::factory()->times(3)->create();

    $response = $this->post('api/chat/echoes/{user_id}/delete/chatroom', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('delete target echo returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userEcho = \App\Models\UserEcho::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userEchos = \App\Models\UserEcho::factory()->times(3)->create();

    $response = $this->post('api/chat/echoes/{user_id}/delete/target', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('echoes returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();

    $response = $this->get('api/chat/echoes');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('messages returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/messages/{room_id}');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('private messages returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/private/messages/{target_id}');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('rooms returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/rooms');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('statuses returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');



    $response = $this->get('api/chat/statuses');

    $response->assertOk();

    // TODO: perform additional assertions
});

test('toggle bot audible returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userAudible = \App\Models\UserAudible::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userAudibles = \App\Models\UserAudible::factory()->times(3)->create();

    $response = $this->post('api/chat/audibles/{user_id}/toggle/bot', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('toggle room audible returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userAudible = \App\Models\UserAudible::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userAudibles = \App\Models\UserAudible::factory()->times(3)->create();

    $response = $this->post('api/chat/audibles/{user_id}/toggle/chatroom', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('toggle target audible returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $userAudible = \App\Models\UserAudible::factory()->create();
    $user = \App\Models\User::factory()->create();
    $userAudibles = \App\Models\UserAudible::factory()->times(3)->create();

    $response = $this->post('api/chat/audibles/{user_id}/toggle/target', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update user chat status returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();

    $response = $this->post('api/chat/user/{id}/status', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update user room returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();
    $userEchos = \App\Models\UserEcho::factory()->times(3)->create();

    $response = $this->post('api/chat/user/{id}/chatroom', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

test('update user target returns an ok response', function (): void {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = \App\Models\User::factory()->create();

    $response = $this->post('api/chat/user/{id}/target', [
        // TODO: send request data
    ]);

    $response->assertOk();

    // TODO: perform additional assertions
});

// test cases...
